spring:
#  security:
#    basic:
#      enabled: true
  profiles: dev
  datasource:
    username: root
    url: jdbc:mysql://localhost:3306/myclinic?serverTimezone=GMT%2B8&characterEncoding=UTF-8
    password: rootroot
    driver-class-name: com.mysql.cj.jdbc.Driver
    #指定数据源的类
    type: com.alibaba.druid.pool.DruidDataSource
      #Spring Boot 默认是不注入这些属性值的，需要自己绑定
    #druid 数据源专有配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

      #配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
      #如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  redis:
    host: localhost
    port: 6379

#配置mybatis
mybatis:
  type-aliases-package: cn.edu.nuaa.myclinic.pojo
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    cache-enabled: true
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  #开启日志
mybatis-plus:
  type-aliases-package: cn.edu.nuaa.myclinic.pojo
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl # mybatisplus 开启日志
#pagehelper分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# JWT配置
jwt:
  # 密匙KEY
  secret: JWTSecret
  # HeaderKEY
  tokenHeader: Access-Token
  # Token前缀字符
  tokenPrefix: Security-c
  # 过期时间 单位秒 1天后过期=86400 7天后过期=604800
  expiration: 86400
  # 配置不需要认证的接口
  antMatchers: /index/** , /doLogin
# sql日志
logging:
  level:
    cn.edu.nuaa.myclinic.mapper: DEBUG #包路径为mapper文件包路径
# 上传文件配置
file:
  # 服务器上的地址
  staticAccessPath: /myClinic/uploadFile/avatarImg/
  # 本地路径
  uploadFolder: D:\Code\Java\Design-for-Graduation-Java-Edition\avatarImg\

# Find more available configuration properties on the following pages of the documentation.
# https://docs.camunda.org/manual/latest/user-guide/camunda-bpm-run/#configure-camunda-bpm-run
# https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/#camunda-engine-properties

camunda.bpm:
  generic-properties.properties:
    javaSerializationFormatEnabled: true
  admin-user:
    id: demo
    password: demo
  run:
    # https://docs.camunda.org/manual/latest/user-guide/camunda-bpm-run/#cross-origin-resource-sharing
    cors:
      enabled: true
      allowed-origins: "*"
  #禁止index跳转到Camunda自带的管理界面，默认true
  webapp:
   index-redirect-enabled: false

# By default, Spring Boot serves static content from any directories called /static or /public or /resources or
# /META-INF/resources in the classpath. To prevent users from accidentally sharing files, this is disabled here by setting static locations to NULL.
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-spring-mvc-static-content
spring.web.resources:
  static-locations: NULL
server:
  port: 8086
